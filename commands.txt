git init -> creates a new repository in the current folder
git clone -> clones a remote repository in the current folder
git status -> list all information about untrecked files
git status -s -> list only the untrecked files
git add myfile -> add "myfile" into stage area
git add * OR git add . OR git add --all  -> add all the untrecked files into stage area
git commit -m "my commit message" -> saves in my repository git a current version of my files
git commit --amend --no-edit  -> joins the current commit with the last commit
git stash -> saves changes after the last commit in a temporary area
git stash -> list all stashs in your repository
git stash apply -> return my modificate files for my unstaged area but don't remove my stash of the stack
git stash pop -> return my modificate files for my unstaged area and remove my stash of the stack
git stash clear -> Clean all my stashs
git log -> log information about all my commits
git log --pretty=format:'%H' -> log only hashes commits
git log --pretty=format:'%cn' -> log only the name of the each commit author 
git tag 1.0 -> Create a tag 1.0 for the project
git tag -d 1.0 -> Remove the tag 1.0 of the project
git tag 1.0 -m "Release 1.0" -> Create a annoteded tag
git tag -a "0.1.beta" -m "Release 0.1.beta" e243728 -> Add tag a previous commit
git push origin master --follow-tags -> Push to the server only annoteded tags
git push --delete origin "0.2.beta" -> Delete "0.2.beta" tag from my remote server

git reset test.js -> Remove test.js from stage area (like "git add" reverse)
git reset 1b96402 --soft -> Remove my commit and return my files to the previous state. 
git reset HEAD~1/1b96402 --mixed -> Remove my commit and return my files to the state before "git add".
git reset 1b96402 --hard -> Remove my commit, delete untrecked files and remove all changes in unstaged files. 
git reset --hard -> return my files to the intial state of my commit.


git remote -v -> list all remotes repositories and urls
git config --list -> list all git configurations 
git config --system --edit -> open the system configurations file
git config --global --edit -> open the user configurations file
git config --edit -> open the local repository configurations

OBS: State of my files -> untrecked, unstaged, staged. 
Untrecked -> The git dont know my file.
Unsteged -> The git know my file, but have changes not added to the stage area.
Staged -> All changes have been added to the stage area, my file is ready to be commited. 